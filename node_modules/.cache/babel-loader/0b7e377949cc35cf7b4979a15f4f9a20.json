{"ast":null,"code":"import _slicedToArray from\"C:/Users/Pega carona 01/Documents/PegaCarona.Dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';var types={email:{regex:/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,message:'Preencha um email válido'}};var useForm=function useForm(type){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),error=_React$useState4[0],setError=_React$useState4[1];function _validate(value){if(type===false)return true;if(value.length===0){setError('Preencha um valor.');return false;}else if(types[type]&&!types[type].regex.test(value)){setError(types[type].message);return false;}else{setError(null);return true;}}function onChange(_ref){var target=_ref.target;if(error)_validate(target.value);setValue(target.value);}return{value:value,setValue:setValue,onChange:onChange,error:error,validate:function validate(){return _validate(value);},onBlur:function onBlur(){return _validate(value);}};};export default useForm;","map":{"version":3,"sources":["C:/Users/Pega carona 01/Documents/PegaCarona.Dev/src/components/pages/login/useForm.js"],"names":["React","types","email","regex","message","useForm","type","useState","value","setValue","error","setError","validate","length","test","onChange","target","onBlur"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,KAAK,CAAG,CACZC,KAAK,CAAE,CACLC,KAAK,CAAE,uJADF,CAELC,OAAO,CAAE,0BAFJ,CADK,CAAd,CAOA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxB,oBAA0BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1B,oDAAOC,KAAP,qBAAcC,QAAd,qBACA,qBAA0BT,KAAK,CAACO,QAAN,CAAe,IAAf,CAA1B,qDAAOG,KAAP,qBAAcC,QAAd,qBAEA,QAASC,CAAAA,SAAT,CAAkBJ,KAAlB,CAAyB,CACvB,GAAIF,IAAI,GAAK,KAAb,CAAoB,MAAO,KAAP,CACpB,GAAIE,KAAK,CAACK,MAAN,GAAiB,CAArB,CAAwB,CACtBF,QAAQ,CAAC,oBAAD,CAAR,CACA,MAAO,MAAP,CACD,CAHD,IAGO,IAAIV,KAAK,CAACK,IAAD,CAAL,EAAe,CAACL,KAAK,CAACK,IAAD,CAAL,CAAYH,KAAZ,CAAkBW,IAAlB,CAAuBN,KAAvB,CAApB,CAAmD,CACxDG,QAAQ,CAACV,KAAK,CAACK,IAAD,CAAL,CAAYF,OAAb,CAAR,CACA,MAAO,MAAP,CACD,CAHM,IAGA,CACLO,QAAQ,CAAC,IAAD,CAAR,CACA,MAAO,KAAP,CACD,CACF,CAED,QAASI,CAAAA,QAAT,MAA8B,IAAVC,CAAAA,MAAU,MAAVA,MAAU,CAC5B,GAAIN,KAAJ,CAAWE,SAAQ,CAACI,MAAM,CAACR,KAAR,CAAR,CACXC,QAAQ,CAACO,MAAM,CAACR,KAAR,CAAR,CACD,CAED,MAAO,CACLA,KAAK,CAALA,KADK,CAELC,QAAQ,CAARA,QAFK,CAGLM,QAAQ,CAARA,QAHK,CAILL,KAAK,CAALA,KAJK,CAKLE,QAAQ,CAAE,0BAAMA,CAAAA,SAAQ,CAACJ,KAAD,CAAd,EALL,CAMLS,MAAM,CAAE,wBAAML,CAAAA,SAAQ,CAACJ,KAAD,CAAd,EANH,CAAP,CAQD,CA/BD,CAiCA,cAAeH,CAAAA,OAAf","sourcesContent":["import React from 'react';\r\n\r\nconst types = {\r\n  email: {\r\n    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    message: 'Preencha um email válido',\r\n  },\r\n};\r\n\r\nconst useForm = (type) => {\r\n  const [value, setValue] = React.useState('');\r\n  const [error, setError] = React.useState(null);\r\n\r\n  function validate(value) {\r\n    if (type === false) return true;\r\n    if (value.length === 0) {\r\n      setError('Preencha um valor.');\r\n      return false;\r\n    } else if (types[type] && !types[type].regex.test(value)) {\r\n      setError(types[type].message);\r\n      return false;\r\n    } else {\r\n      setError(null);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function onChange({ target }) {\r\n    if (error) validate(target.value);\r\n    setValue(target.value);\r\n  }\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    onChange,\r\n    error,\r\n    validate: () => validate(value),\r\n    onBlur: () => validate(value),\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}